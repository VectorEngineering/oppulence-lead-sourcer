name: Reusable Cloudflare Worker Deployment

on:
    workflow_call:
        inputs:
            worker_name:
                required: true
                type: string
                description: 'The name of the worker to deploy (api, billing, logdrain, workflows, semantic-cache, chproxy)'
            environment:
                required: false
                type: string
                default: 'production'
                description: 'The environment to deploy to'
            skip_build:
                required: false
                type: boolean
                default: false
                description: "Skip build step if worker doesn't require building"
        secrets:
            CF_API_TOKEN:
                required: true
                description: 'Cloudflare API Token with Workers deployment permissions'
            CF_ACCOUNT_ID:
                required: true
                description: 'Cloudflare Account ID'
            SLACK_WEBHOOK_URL:
                required: false
                description: 'Slack webhook URL for notifications'

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: ${{ inputs.environment }}

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 9

            - name: Install dependencies
              run: pnpm install

            # Build step (skippable)
            - name: Build Worker
              if: inputs.skip_build != true
              run: pnpm run build
              working-directory: cloudflare/${{ inputs.worker_name }}
            - name: Deploy Project Artifacts to Cloudflare
              uses: cloudflare/wrangler-action@v3
              with:
                  packageManager: pnpm
                  apiToken: ${{ secrets.CF_API_TOKEN }}
                  workingDirectory: 'cloudflare/${{ inputs.worker_name }}'
                  wranglerVersion: '3.76.0'
                  command: deploy --minify src/index.ts --env ${{ inputs.environment }}
            # Notify Slack on completion (if webhook provided)
            - name: Notify Slack on Success
              if: success() && inputs.environment == 'production'
              uses: slackapi/slack-github-action@v1.25.0
              with:
                  payload: |
                      {
                        "text": "✅ Successfully deployed ${{ inputs.worker_name }} worker to ${{ inputs.environment }}",
                        "blocks": [
                          {
                            "type": "section",
                            "text": {
                              "type": "mrkdwn",
                              "text": "*✅ Successful Deployment*\n• Worker: `${{ inputs.worker_name }}`\n• Environment: `${{ inputs.environment }}`\n• Commit: `${{ github.sha }}`"
                            }
                          }
                        ]
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

            - name: Notify Slack on Failure
              if: failure() && inputs.environment == 'production'
              uses: slackapi/slack-github-action@v1.25.0
              with:
                  payload: |
                      {
                        "text": "❌ Failed to deploy ${{ inputs.worker_name }} worker to ${{ inputs.environment }}",
                        "blocks": [
                          {
                            "type": "section",
                            "text": {
                              "type": "mrkdwn",
                              "text": "*❌ Deployment Failed*\n• Worker: `${{ inputs.worker_name }}`\n• Environment: `${{ inputs.environment }}`\n• Commit: `${{ github.sha }}`\n\nCheck the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|workflow logs> for details."
                            }
                          }
                        ]
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
