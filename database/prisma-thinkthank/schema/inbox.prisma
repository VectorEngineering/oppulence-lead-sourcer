// File Types supported in the inbox
enum InboxType {
  invoice
  expense
  document
  contract
  template
  report
  image
  spreadsheet
  presentation
  archive
  media
  code
  signature
  certificate
  form
  other
}

// File Status with more granular states
enum InboxStatus {
  new
  validating      // Validating file integrity
  scanning        // Virus/malware scanning
  processing      // Processing the file
  analyzing       // Running analysis
  indexing        // Indexing content
  pending         // Awaiting action
  completed       // Successfully processed
  failed          // Processing failed
  corrupted       // File integrity issues
  infected        // Malware detected
  archived        // Archived
  deleted         // Marked for deletion
  purged          // Permanently deleted
  flagged         // Flagged for review
  quarantined     // Security quarantine
  restored        // Restored from archive/deletion
}

// File Access Level
enum InboxAccessLevel {
  private         // Only owner can access
  team            // Team members can access
  restricted      // Specific users can access
  public          // Anyone with link can access
}

// File Classification for security
enum InboxClassification {
  public          // No restrictions
  internal        // Internal use only
  confidential    // Confidential information
  restricted      // Restricted access
  sensitive       // Sensitive data
  critical        // Critical business data
}

// Storage Location
enum StorageLocation {
  local           // Local storage
  cloud           // Cloud storage
  archive         // Archive storage
  backup          // Backup storage
  cold_storage    // Cold storage
}

// Retention Policy
enum RetentionPolicy {
  none            // No retention policy
  short_term      // Short term (30 days)
  medium_term     // Medium term (1 year)
  long_term       // Long term (7 years)
  permanent       // Permanent retention
  custom          // Custom retention period
}

model Inbox {
  id              String       @id @default(cuid())

  // Basic File Information
  name            String       // Display name of the file
  originalName    String?      // Original file name
  description     String?      @db.Text
  type            InboxType?
  status          InboxStatus? @default(new)

  // File Details
  fileName        String?
  filePath        String?
  fileUrl         String?      // Public URL if shared
  fileHash        String?      // File hash for integrity
  fileType        String?      // MIME type
  fileExtension   String?      // File extension
  size            Int?         // Size in bytes
  contentType     String?
  checksum        String?      // Additional integrity check
  compression     String?      // Compression method used
  storageLocation StorageLocation @default(local)

  // Enhanced Security
  virusScanStatus String?      // Virus scan result
  virusScanDate   DateTime?    // Last virus scan
  securityFlags   Json?        // Security warning flags
  accessAttempts  Json?        // Failed access attempts
  lastSecurityAudit DateTime?  // Last security audit
  encryptionMethod String?     // Encryption method used
  encryptionKeyId String?      // Reference to encryption key
  digitalSignature String?     // Digital signature
  certificateId   String?      // Digital certificate ID

  // Organization
  folderId        String?      // Parent folder
  path            String?      // Full path in the hierarchy
  tags            Json?        // File tags
  starred         Boolean      @default(false)
  pinned          Boolean      @default(false)
  sortOrder       Int?         // Custom sort order
  displayOrder    Int?         // Display order in UI

  // Enhanced Access Control
  accessLevel     InboxAccessLevel @default(private)
  classification  InboxClassification @default(public)
  password        String?      // Optional password protection
  encryptionKey   String?      // For encrypted files
  shareableLink   String?      // Public sharing link
  accessCount     Int          @default(0)
  maxAccessCount  Int?         // Maximum allowed accesses
  accessHistory   Json?        // Detailed access history
  ipRestrictions  Json?        // IP-based access restrictions
  allowedDomains  Json?        // Allowed email domains
  geoRestrictions Json?        // Geographic restrictions

  // Data Retention
  retentionPolicy RetentionPolicy @default(none)
  retentionDate   DateTime?    // When to auto-delete/archive
  legalHold       Boolean      @default(false) // Prevent deletion
  dispositionDate DateTime?    // Scheduled deletion date
  archiveDate     DateTime?    // When to move to archive
  purgeDate       DateTime?    // When to permanently delete

  // Financial Information
  amount          Float?
  baseAmount      Float?
  baseCurrency    String?
  currency        String?
  exchangeRate    Float?       // Currency exchange rate
  taxAmount       Float?       // Tax amount
  totalAmount     Float?       // Total with tax

  // Enhanced Dates
  date            DateTime?    // Document/Transaction date
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  lastAccessedAt  DateTime?
  expiresAt       DateTime?    // Optional expiration
  effectiveDate   DateTime?    // When document becomes effective
  lastValidated   DateTime?    // Last validation date
  lastBackupDate  DateTime?    // Last backup date

  // Processing & Workflow
  processingStatus String?
  processingErrors String?     @db.Text
  retryCount      Int         @default(0)
  maxRetries      Int         @default(3)
  workflow        String?      // Current workflow state
  approvalStatus  String?      // If requires approval
  approvedBy      String?
  approvedAt      DateTime?
  rejectionReason String?      // Why approval was rejected
  nextReviewDate  DateTime?    // Next review date

  // Enhanced OCR & Analysis
  ocrText         String?      @db.Text
  ocrLanguage     String?
  ocrConfidence   Float?
  ocrEngine       String?      // OCR engine used
  analysisResults Json?        // AI/ML analysis results
  metadata        Json?        // Additional metadata
  contentHash     String?      // Hash of file content
  contentAnalysis Json?        // Content analysis results
  aiTags          Json?        // AI-generated tags
  customMetadata  Json?        // User-defined metadata

  // Version Control
  version         Int          @default(1)
  versionNotes    String?      @db.Text
  parentVersion   String?      // Previous version ID
  isLatestVersion Boolean      @default(true)
  versionHistory  Json?        // Complete version history
  changeLog       Json?        // Detailed change history
  branchName      String?      // Version branch name
  mergeHistory    Json?        // Merge history

  // Collaboration
  forwardedTo     String?
  forwardedBy     String?
  forwardedAt     DateTime?
  sharedWith      Json?        // List of users with access
  collaborators   Json?        // Active collaborators
  lockHolder      String?      // User currently editing
  lockExpiresAt   DateTime?    // When edit lock expires
  lastModifiedBy  String?      // Last user to modify

  // Enhanced References
  referenceId     String?      // External reference
  referenceType   String?      // Type of reference
  sourceSystem    String?      // Origin system
  externalLinks   Json?        // Related external links
  dependencies    Json?        // File dependencies
  relatedFiles    Json?        // Related file IDs

  // Relations
  projectId       String
  project         Project?     @relation(fields: [projectId], references: [id])
  createdById     String?      // User who created the file
  ownerId         String?      // File owner
  lastModifiedById String?     // Last modifier

  // Optional Relations
  attachmentId    String?
  attachment      TransactionAttachment? @relation(fields: [attachmentId], references: [id])
  transactionId   String?
  transaction     Transaction? @relation(fields: [transactionId], references: [id])

  // Folder Structure
  parent          Inbox?       @relation("FolderStructure", fields: [folderId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children        Inbox[]      @relation("FolderStructure")

  // Activity and Access
  activities      InboxActivity[]
  shares          InboxShare[]
  labels          InboxLabel[]

  // Compliance
  complianceStatus String?     // Compliance status
  complianceTags   Json?       // Compliance-related tags
  dataPrivacyLevel String?     // GDPR, HIPAA, etc.
  regulatoryFlags  Json?       // Regulatory requirements
  auditTrail       Json?       // Complete audit trail

  // Recovery & Backup
  backupStatus    String?      // Backup status
  lastBackupId    String?      // Last backup reference
  recoveryPoint   String?      // Recovery point ID
  backupLocation  String?      // Backup storage location

  @@index([projectId])
  @@index([attachmentId])
  @@index([transactionId])
  @@index([type])
  @@index([status])
  @@index([folderId])
  @@index([createdAt])
  @@index([path])
  @@index([createdById])
  @@index([ownerId])
  @@index([lastModifiedById])
  @@index([storageLocation])
  @@index([classification])
  @@index([retentionPolicy])
  @@fulltext([name, description, ocrText])
}

// Activity tracking with enhanced security
model InboxActivity {
  id            String    @id @default(cuid())
  inboxId       String
  action        String    // Type of activity
  description   String    @db.Text
  metadata      Json?
  createdAt     DateTime  @default(now())
  createdBy     String?
  ipAddress     String?
  userAgent     String?
  sessionId     String?   // User session ID
  requestId     String?   // Request tracking ID
  success       Boolean   @default(true)
  errorDetails  Json?     // If activity failed
  severity      String?   // Activity importance
  source        String?   // Activity source
  location      String?   // Geographic location
  deviceInfo    Json?     // Device information
  riskScore     Float?    // Activity risk score

  inbox         Inbox     @relation(fields: [inboxId], references: [id], onDelete: Cascade)

  @@index([inboxId])
  @@index([createdAt])
  @@index([createdBy])
  @@index([action])
}

// Enhanced sharing with better security
model InboxShare {
  id            String    @id @default(cuid())
  inboxId       String
  userId        String?   // User the item is shared with
  email         String?   // External email for sharing
  accessLevel   String    // Read, write, etc.
  expiresAt     DateTime?
  password      String?   // Optional password for external sharing
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastAccessed  DateTime?
  accessCount   Int       @default(0)
  maxAccesses   Int?      // Maximum allowed accesses
  ipRestriction String?   // Allowed IP ranges
  domainRestriction String? // Allowed email domains
  deviceLimit   Int?      // Max concurrent devices
  requireMFA    Boolean   @default(false)
  notifyOnAccess Boolean  @default(false)
  accessSchedule Json?    // Allowed access times
  revokedAt     DateTime? // When share was revoked
  revokedBy     String?   // Who revoked the share
  revokeReason  String?   // Why share was revoked

  inbox         Inbox     @relation(fields: [inboxId], references: [id], onDelete: Cascade)

  @@index([inboxId])
  @@index([userId])
  @@index([email])
  @@index([expiresAt])
}

// Enhanced labels with better organization
model InboxLabel {
  id            String    @id @default(cuid())
  inboxId       String
  name          String
  color         String?
  description   String?   @db.Text
  metadata      Json?
  icon          String?   // Label icon
  category      String?   // Label category
  priority      Int?      // Label priority
  isSystem      Boolean   @default(false)
  isRequired    Boolean   @default(false)
  validFrom     DateTime? // Label validity period
  validUntil    DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  createdBy     String?
  updatedBy     String?

  inbox         Inbox     @relation(fields: [inboxId], references: [id], onDelete: Cascade)

  @@index([inboxId])
  @@index([category])
  @@index([priority])
  @@unique([inboxId, name])
}
