import type { Prisma } from '@prisma/client'

import { z } from 'zod'
import { SortOrderSchema } from './SortOrderSchema'

export const TransactionCountOrderByAggregateInputSchema: z.ZodType<Prisma.TransactionCountOrderByAggregateInput> = z
    .object({
        id: z.lazy(() => SortOrderSchema).optional(),
        name: z.lazy(() => SortOrderSchema).optional(),
        description: z.lazy(() => SortOrderSchema).optional(),
        note: z.lazy(() => SortOrderSchema).optional(),
        internalNotes: z.lazy(() => SortOrderSchema).optional(),
        reference: z.lazy(() => SortOrderSchema).optional(),
        amount: z.lazy(() => SortOrderSchema).optional(),
        baseAmount: z.lazy(() => SortOrderSchema).optional(),
        balance: z.lazy(() => SortOrderSchema).optional(),
        exchangeRate: z.lazy(() => SortOrderSchema).optional(),
        fees: z.lazy(() => SortOrderSchema).optional(),
        tax: z.lazy(() => SortOrderSchema).optional(),
        taxRate: z.lazy(() => SortOrderSchema).optional(),
        currency: z.lazy(() => SortOrderSchema).optional(),
        baseCurrency: z.lazy(() => SortOrderSchema).optional(),
        date: z.lazy(() => SortOrderSchema).optional(),
        valueDate: z.lazy(() => SortOrderSchema).optional(),
        createdAt: z.lazy(() => SortOrderSchema).optional(),
        updatedAt: z.lazy(() => SortOrderSchema).optional(),
        clearedAt: z.lazy(() => SortOrderSchema).optional(),
        reconciledAt: z.lazy(() => SortOrderSchema).optional(),
        cancelledAt: z.lazy(() => SortOrderSchema).optional(),
        status: z.lazy(() => SortOrderSchema).optional(),
        verificationStatus: z.lazy(() => SortOrderSchema).optional(),
        reconciliationStatus: z.lazy(() => SortOrderSchema).optional(),
        priority: z.lazy(() => SortOrderSchema).optional(),
        riskLevel: z.lazy(() => SortOrderSchema).optional(),
        categoryTag: z.lazy(() => SortOrderSchema).optional(),
        categoryId: z.lazy(() => SortOrderSchema).optional(),
        categorySlug: z.lazy(() => SortOrderSchema).optional(),
        subcategory: z.lazy(() => SortOrderSchema).optional(),
        method: z.lazy(() => SortOrderSchema).optional(),
        type: z.lazy(() => SortOrderSchema).optional(),
        direction: z.lazy(() => SortOrderSchema).optional(),
        recurring: z.lazy(() => SortOrderSchema).optional(),
        frequency: z.lazy(() => SortOrderSchema).optional(),
        nextDueDate: z.lazy(() => SortOrderSchema).optional(),
        recurringRules: z.lazy(() => SortOrderSchema).optional(),
        internal: z.lazy(() => SortOrderSchema).optional(),
        internalTransactionId: z.lazy(() => SortOrderSchema).optional(),
        manual: z.lazy(() => SortOrderSchema).optional(),
        needsReview: z.lazy(() => SortOrderSchema).optional(),
        isDisputed: z.lazy(() => SortOrderSchema).optional(),
        isFlagged: z.lazy(() => SortOrderSchema).optional(),
        isReconciled: z.lazy(() => SortOrderSchema).optional(),
        isConfidential: z.lazy(() => SortOrderSchema).optional(),
        budgetCategory: z.lazy(() => SortOrderSchema).optional(),
        costCenter: z.lazy(() => SortOrderSchema).optional(),
        profitCenter: z.lazy(() => SortOrderSchema).optional(),
        projectCode: z.lazy(() => SortOrderSchema).optional(),
        departmentCode: z.lazy(() => SortOrderSchema).optional(),
        complianceStatus: z.lazy(() => SortOrderSchema).optional(),
        auditTrail: z.lazy(() => SortOrderSchema).optional(),
        verifiedBy: z.lazy(() => SortOrderSchema).optional(),
        verifiedAt: z.lazy(() => SortOrderSchema).optional(),
        lastReviewedBy: z.lazy(() => SortOrderSchema).optional(),
        lastReviewedAt: z.lazy(() => SortOrderSchema).optional(),
        reconciliationId: z.lazy(() => SortOrderSchema).optional(),
        matchingCriteria: z.lazy(() => SortOrderSchema).optional(),
        reconciliationNotes: z.lazy(() => SortOrderSchema).optional(),
        metadata: z.lazy(() => SortOrderSchema).optional(),
        customFields: z.lazy(() => SortOrderSchema).optional(),
        labels: z.lazy(() => SortOrderSchema).optional(),
        notified: z.lazy(() => SortOrderSchema).optional(),
        bankAccountId: z.lazy(() => SortOrderSchema).optional(),
        assignedId: z.lazy(() => SortOrderSchema).optional(),
        projectId: z.lazy(() => SortOrderSchema).optional()
    })
    .strict()

export default TransactionCountOrderByAggregateInputSchema
