{
    "name": "flowise",
    "version": "2.2.5",
    "private": true,
    "homepage": "https://flowiseai.com",
    "workspaces": [
        "packages/*",
        "flowise",
        "ui",
        "components",
        "api-documentation"
    ],
    "scripts": {
        "build-all": "turbo run build",
        "build": "turbo run build",
        "build-archon": "turbo run build --filter=@playbookmedia/archon",
        "build-prospector": "turbo run build --filter=@playbookmedia/prospector",
        "build-www": "turbo run build --filter=@playbookmedia/www",
        "build-force": "pnpm clean && turbo run build --force",
        "build-no-cache": "turbo run build --no-cache",
        "dev": "turbo run dev --parallel",
        "start": "run-script-os",
        "start:windows": "cd packages/server/bin && run start",
        "start:default": "cd packages/server/bin && ./run start",
        "start-worker": "run-script-os",
        "start-worker:windows": "cd packages/server/bin && run worker",
        "start-worker:default": "cd packages/server/bin && ./run worker",
        "clean": "pnpm --filter \"./packages/**\" clean",
        "nuke": "pnpm --filter \"./packages/**\" nuke && rimraf node_modules .turbo",
        "format": "prettier --write \"**/*.{ts,tsx,md}\"",
        "lint": "eslint \"apps/**/*.{js,jsx,ts,tsx}\"",
        "lint-fix": "pnpm lint --fix",
        "quick": "pretty-quick --staged",
        "postinstall": "husky install",
        "migration:create": "pnpm typeorm migration:create",
        "sync-upstream": "bash scripts/sync-upstream.sh",
        "clean:all": "rm -rf node_modules && rm -rf .turbo && rm -rf .next && find . -name 'node_modules' -type d -prune -exec rm -rf '{}' + && find . -name '.next' -type d -prune -exec rm -rf '{}' + && find . -name '.turbo' -type d -prune -exec rm -rf '{}' +",
        "check-docker": "./scripts/check-docker.sh",
        "check-services": "./scripts/check-services.sh",
        "prettier-check": "prettier --check \"**/*.{ts,tsx,md}\"",
        "publish-cli": "turbo build --filter='@dub/cli' && cd packages/cli && npm publish && cd ../../",
        "publish-embed-core": "turbo build --filter='@dub/embed-core' && cd packages/embeds/core && npm publish && cd ../../../",
        "publish-embed-react": "turbo build --filter='@dub/embed-react' && cd packages/embeds/react && npm publish && cd ../../../",
        "publish-tw": "turbo build --filter='@dub/tailwind-config' && cd packages/tailwind-config && npm publish && cd ../../",
        "publish-ui": "turbo build --filter='@dub/ui' && cd packages/ui && npm publish && cd ../../",
        "publish-utils": "turbo build --filter='@dub/utils' && cd packages/utils && npm publish && cd ../../",
        "script": "echo 'Run this script in apps/web'",
        "test": "turbo run test",
        "start:dev": "pnpm check-docker && cd apps/web && docker-compose up -d && cd ../.. && pnpm check-services && pnpm install && pnpm -r --filter \"./packages/**\" build && cd apps/web && pnpm run prisma:generate && pnpm run prisma:push && cd ../.. && pnpm dev",
        "precommit": "pnpm install --no-frozen-lockfile && pnpm format && pnpm i && pnpm build",
        "version": "changeset version",
        "prepare": "husky install",
        "lint-staged": "lint-staged",
        "type-check": "turbo type-check",
        "type-check:ci": "pnpm -r exec tsc --noEmit",
        "test:affected": "jest --bail --findRelatedTests $(git diff --cached --name-only | grep -E '\\.(ts|tsx|js|jsx)$')",
        "actionlint": "pnpm dlx actionlint"
    },
    "lint-staged": {
        "*.{js,jsx,ts,tsx}": [
            "eslint --fix",
            "prettier --write"
        ],
        "*.{json,md,yml,yaml}": [
            "prettier --write"
        ],
        "*.{css,scss}": [
            "prettier --write"
        ]
    },
    "devDependencies": {
        "@babel/preset-env": "^7.19.4",
        "@babel/preset-typescript": "7.18.6",
        "@types/express": "^4.17.13",
        "@typescript-eslint/typescript-estree": "^7.13.1",
        "eslint": "^8.24.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-config-react-app": "^7.0.1",
        "eslint-plugin-jsx-a11y": "^6.6.1",
        "eslint-plugin-markdown": "^3.0.0",
        "eslint-plugin-prettier": "^3.4.0",
        "eslint-plugin-react": "^7.26.1",
        "eslint-plugin-react-hooks": "^4.6.0",
        "eslint-plugin-unused-imports": "^2.0.0",
        "husky": "^8.0.3",
        "kill-port": "^2.0.1",
        "lint-staged": "^15.2.0",
        "prettier": "^3.2.0",
        "pretty-quick": "^3.1.3",
        "rimraf": "^3.0.2",
        "run-script-os": "^1.1.6",
        "turbo": "1.10.16",
        "typescript": "^5.4.5"
    },
    "pnpm": {
        "onlyBuiltDependencies": [
            "faiss-node"
        ],
        "overrides": {
            "set-value": "^3.0.3"
        }
    },
    "engines": {
        "node": ">=18.15.0 <19.0.0 || ^20",
        "pnpm": ">=9"
    },
    "resolutions": {
        "@google/generative-ai": "^0.15.0",
        "@grpc/grpc-js": "^1.10.10",
        "@langchain/core": "0.3.37",
        "@qdrant/openapi-typescript-fetch": "1.2.6",
        "openai": "4.82.0",
        "protobufjs": "7.4.0",
        "zod": "3.23.8",
        "@radix-ui/react-dialog": "1.0.5",
        "@radix-ui/react-popover": "1.0.7",
        "undici": "5.28.2"
    },
    "eslintIgnore": [
        "**/dist",
        "**/node_modules",
        "**/build",
        "**/package-lock.json"
    ],
    "build": {
        "env": {
            "NEXT_TELEMETRY_DISABLED": "1"
        }
    },
    "prettier": {
        "printWidth": 140,
        "singleQuote": true,
        "jsxSingleQuote": true,
        "trailingComma": "none",
        "tabWidth": 4,
        "semi": false,
        "endOfLine": "auto"
    },
    "babel": {
        "presets": [
            "@babel/preset-typescript",
            [
                "@babel/preset-env",
                {
                    "targets": {
                        "node": "current"
                    }
                }
            ]
        ]
    },
    "dependencies": {
        "@changesets/cli": "^2.27.12",
        "gitmoji-cli": "^9.5.0",
        "pkg-types": "^1.3.1"
    }
}
