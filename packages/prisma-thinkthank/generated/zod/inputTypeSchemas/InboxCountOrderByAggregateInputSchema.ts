import type { Prisma } from '@prisma/client';

import { z } from 'zod';
import { SortOrderSchema } from './SortOrderSchema';

export const InboxCountOrderByAggregateInputSchema: z.ZodType<Prisma.InboxCountOrderByAggregateInput> = z.object({
  id: z.lazy(() => SortOrderSchema).optional(),
  name: z.lazy(() => SortOrderSchema).optional(),
  originalName: z.lazy(() => SortOrderSchema).optional(),
  description: z.lazy(() => SortOrderSchema).optional(),
  type: z.lazy(() => SortOrderSchema).optional(),
  status: z.lazy(() => SortOrderSchema).optional(),
  fileName: z.lazy(() => SortOrderSchema).optional(),
  filePath: z.lazy(() => SortOrderSchema).optional(),
  fileUrl: z.lazy(() => SortOrderSchema).optional(),
  fileHash: z.lazy(() => SortOrderSchema).optional(),
  fileType: z.lazy(() => SortOrderSchema).optional(),
  fileExtension: z.lazy(() => SortOrderSchema).optional(),
  size: z.lazy(() => SortOrderSchema).optional(),
  contentType: z.lazy(() => SortOrderSchema).optional(),
  checksum: z.lazy(() => SortOrderSchema).optional(),
  compression: z.lazy(() => SortOrderSchema).optional(),
  storageLocation: z.lazy(() => SortOrderSchema).optional(),
  virusScanStatus: z.lazy(() => SortOrderSchema).optional(),
  virusScanDate: z.lazy(() => SortOrderSchema).optional(),
  securityFlags: z.lazy(() => SortOrderSchema).optional(),
  accessAttempts: z.lazy(() => SortOrderSchema).optional(),
  lastSecurityAudit: z.lazy(() => SortOrderSchema).optional(),
  encryptionMethod: z.lazy(() => SortOrderSchema).optional(),
  encryptionKeyId: z.lazy(() => SortOrderSchema).optional(),
  digitalSignature: z.lazy(() => SortOrderSchema).optional(),
  certificateId: z.lazy(() => SortOrderSchema).optional(),
  folderId: z.lazy(() => SortOrderSchema).optional(),
  path: z.lazy(() => SortOrderSchema).optional(),
  tags: z.lazy(() => SortOrderSchema).optional(),
  starred: z.lazy(() => SortOrderSchema).optional(),
  pinned: z.lazy(() => SortOrderSchema).optional(),
  sortOrder: z.lazy(() => SortOrderSchema).optional(),
  displayOrder: z.lazy(() => SortOrderSchema).optional(),
  accessLevel: z.lazy(() => SortOrderSchema).optional(),
  classification: z.lazy(() => SortOrderSchema).optional(),
  password: z.lazy(() => SortOrderSchema).optional(),
  encryptionKey: z.lazy(() => SortOrderSchema).optional(),
  shareableLink: z.lazy(() => SortOrderSchema).optional(),
  accessCount: z.lazy(() => SortOrderSchema).optional(),
  maxAccessCount: z.lazy(() => SortOrderSchema).optional(),
  accessHistory: z.lazy(() => SortOrderSchema).optional(),
  ipRestrictions: z.lazy(() => SortOrderSchema).optional(),
  allowedDomains: z.lazy(() => SortOrderSchema).optional(),
  geoRestrictions: z.lazy(() => SortOrderSchema).optional(),
  retentionPolicy: z.lazy(() => SortOrderSchema).optional(),
  retentionDate: z.lazy(() => SortOrderSchema).optional(),
  legalHold: z.lazy(() => SortOrderSchema).optional(),
  dispositionDate: z.lazy(() => SortOrderSchema).optional(),
  archiveDate: z.lazy(() => SortOrderSchema).optional(),
  purgeDate: z.lazy(() => SortOrderSchema).optional(),
  amount: z.lazy(() => SortOrderSchema).optional(),
  baseAmount: z.lazy(() => SortOrderSchema).optional(),
  baseCurrency: z.lazy(() => SortOrderSchema).optional(),
  currency: z.lazy(() => SortOrderSchema).optional(),
  exchangeRate: z.lazy(() => SortOrderSchema).optional(),
  taxAmount: z.lazy(() => SortOrderSchema).optional(),
  totalAmount: z.lazy(() => SortOrderSchema).optional(),
  date: z.lazy(() => SortOrderSchema).optional(),
  createdAt: z.lazy(() => SortOrderSchema).optional(),
  updatedAt: z.lazy(() => SortOrderSchema).optional(),
  lastAccessedAt: z.lazy(() => SortOrderSchema).optional(),
  expiresAt: z.lazy(() => SortOrderSchema).optional(),
  effectiveDate: z.lazy(() => SortOrderSchema).optional(),
  lastValidated: z.lazy(() => SortOrderSchema).optional(),
  lastBackupDate: z.lazy(() => SortOrderSchema).optional(),
  processingStatus: z.lazy(() => SortOrderSchema).optional(),
  processingErrors: z.lazy(() => SortOrderSchema).optional(),
  retryCount: z.lazy(() => SortOrderSchema).optional(),
  maxRetries: z.lazy(() => SortOrderSchema).optional(),
  workflow: z.lazy(() => SortOrderSchema).optional(),
  approvalStatus: z.lazy(() => SortOrderSchema).optional(),
  approvedBy: z.lazy(() => SortOrderSchema).optional(),
  approvedAt: z.lazy(() => SortOrderSchema).optional(),
  rejectionReason: z.lazy(() => SortOrderSchema).optional(),
  nextReviewDate: z.lazy(() => SortOrderSchema).optional(),
  ocrText: z.lazy(() => SortOrderSchema).optional(),
  ocrLanguage: z.lazy(() => SortOrderSchema).optional(),
  ocrConfidence: z.lazy(() => SortOrderSchema).optional(),
  ocrEngine: z.lazy(() => SortOrderSchema).optional(),
  analysisResults: z.lazy(() => SortOrderSchema).optional(),
  metadata: z.lazy(() => SortOrderSchema).optional(),
  contentHash: z.lazy(() => SortOrderSchema).optional(),
  contentAnalysis: z.lazy(() => SortOrderSchema).optional(),
  aiTags: z.lazy(() => SortOrderSchema).optional(),
  customMetadata: z.lazy(() => SortOrderSchema).optional(),
  version: z.lazy(() => SortOrderSchema).optional(),
  versionNotes: z.lazy(() => SortOrderSchema).optional(),
  parentVersion: z.lazy(() => SortOrderSchema).optional(),
  isLatestVersion: z.lazy(() => SortOrderSchema).optional(),
  versionHistory: z.lazy(() => SortOrderSchema).optional(),
  changeLog: z.lazy(() => SortOrderSchema).optional(),
  branchName: z.lazy(() => SortOrderSchema).optional(),
  mergeHistory: z.lazy(() => SortOrderSchema).optional(),
  forwardedTo: z.lazy(() => SortOrderSchema).optional(),
  forwardedBy: z.lazy(() => SortOrderSchema).optional(),
  forwardedAt: z.lazy(() => SortOrderSchema).optional(),
  sharedWith: z.lazy(() => SortOrderSchema).optional(),
  collaborators: z.lazy(() => SortOrderSchema).optional(),
  lockHolder: z.lazy(() => SortOrderSchema).optional(),
  lockExpiresAt: z.lazy(() => SortOrderSchema).optional(),
  lastModifiedBy: z.lazy(() => SortOrderSchema).optional(),
  referenceId: z.lazy(() => SortOrderSchema).optional(),
  referenceType: z.lazy(() => SortOrderSchema).optional(),
  sourceSystem: z.lazy(() => SortOrderSchema).optional(),
  externalLinks: z.lazy(() => SortOrderSchema).optional(),
  dependencies: z.lazy(() => SortOrderSchema).optional(),
  relatedFiles: z.lazy(() => SortOrderSchema).optional(),
  projectId: z.lazy(() => SortOrderSchema).optional(),
  createdById: z.lazy(() => SortOrderSchema).optional(),
  ownerId: z.lazy(() => SortOrderSchema).optional(),
  lastModifiedById: z.lazy(() => SortOrderSchema).optional(),
  attachmentId: z.lazy(() => SortOrderSchema).optional(),
  transactionId: z.lazy(() => SortOrderSchema).optional(),
  complianceStatus: z.lazy(() => SortOrderSchema).optional(),
  complianceTags: z.lazy(() => SortOrderSchema).optional(),
  dataPrivacyLevel: z.lazy(() => SortOrderSchema).optional(),
  regulatoryFlags: z.lazy(() => SortOrderSchema).optional(),
  auditTrail: z.lazy(() => SortOrderSchema).optional(),
  backupStatus: z.lazy(() => SortOrderSchema).optional(),
  lastBackupId: z.lazy(() => SortOrderSchema).optional(),
  recoveryPoint: z.lazy(() => SortOrderSchema).optional(),
  backupLocation: z.lazy(() => SortOrderSchema).optional()
}).strict();

export default InboxCountOrderByAggregateInputSchema;
